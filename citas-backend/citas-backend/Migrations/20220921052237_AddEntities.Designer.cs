// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using citas_backend.Data;

#nullable disable

namespace citas_backend.Migrations
{
    [DbContext(typeof(citasContext))]
    [Migration("20220921052237_AddEntities")]
    partial class AddEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("citas_backend.Data.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment1")
                        .HasMaxLength(550)
                        .IsUnicode(false)
                        .HasColumnType("varchar(550)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPost");

                    b.HasIndex("IdUser");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("citas_backend.Data.Date", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date1")
                        .HasColumnType("datetime")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .HasMaxLength(550)
                        .IsUnicode(false)
                        .HasColumnType("varchar(550)");

                    b.Property<double?>("Grade")
                        .HasColumnType("float");

                    b.Property<int>("IdUserFirst")
                        .HasColumnType("int");

                    b.Property<int>("IdUserSecond")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("IdUserFirst");

                    b.HasIndex("IdUserSecond");

                    b.ToTable("Dates");
                });

            modelBuilder.Entity("citas_backend.Data.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Degree", (string)null);
                });

            modelBuilder.Entity("citas_backend.Data.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");
                });

            modelBuilder.Entity("citas_backend.Data.Message", b =>
                {
                    b.Property<int>("IdMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMessage"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUserRecieve")
                        .HasColumnType("int");

                    b.Property<int>("IdUserSend")
                        .HasColumnType("int");

                    b.Property<string>("Message1")
                        .HasMaxLength(1200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1200)")
                        .HasColumnName("Message");

                    b.HasKey("IdMessage");

                    b.HasIndex("IdUserRecieve");

                    b.HasIndex("IdUserSend");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("citas_backend.Data.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(550)
                        .IsUnicode(false)
                        .HasColumnType("varchar(550)");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("citas_backend.Data.PostImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdPost")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("IdPost");

                    b.ToTable("PostImages");
                });

            modelBuilder.Entity("citas_backend.Data.SocialNetwork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("SocialNetworks");
                });

            modelBuilder.Entity("citas_backend.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(550)
                        .IsUnicode(false)
                        .HasColumnType("varchar(550)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Genre")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("IdDegree")
                        .HasColumnType("int");

                    b.Property<string>("ImageProfile")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Token")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdDegree");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("citas_backend.Data.UserHobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdHobbie")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHobbie");

                    b.HasIndex("IdUser");

                    b.ToTable("UserHobbies");
                });

            modelBuilder.Entity("citas_backend.Data.Comment", b =>
                {
                    b.HasOne("citas_backend.Data.Post", "IdPostNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdPost")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__IdPost__2D27B809");

                    b.HasOne("citas_backend.Data.User", "IdUserNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Comments__IdUser__2C3393D0");

                    b.Navigation("IdPostNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.Date", b =>
                {
                    b.HasOne("citas_backend.Data.User", "IdUserFirstNavigation")
                        .WithMany("DateIdUserFirstNavigations")
                        .HasForeignKey("IdUserFirst")
                        .IsRequired()
                        .HasConstraintName("FK__Dates__IdUserFir__3F466844");

                    b.HasOne("citas_backend.Data.User", "IdUserSecondNavigation")
                        .WithMany("DateIdUserSecondNavigations")
                        .HasForeignKey("IdUserSecond")
                        .IsRequired()
                        .HasConstraintName("FK__Dates__IdUserSec__403A8C7D");

                    b.Navigation("IdUserFirstNavigation");

                    b.Navigation("IdUserSecondNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.Message", b =>
                {
                    b.HasOne("citas_backend.Data.User", "IdUserRecieveNavigation")
                        .WithMany("MessageIdUserRecieveNavigations")
                        .HasForeignKey("IdUserRecieve")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__IdUser__3C69FB99");

                    b.HasOne("citas_backend.Data.User", "IdUserSendNavigation")
                        .WithMany("MessageIdUserSendNavigations")
                        .HasForeignKey("IdUserSend")
                        .IsRequired()
                        .HasConstraintName("FK__Messages__IdUser__3B75D760");

                    b.Navigation("IdUserRecieveNavigation");

                    b.Navigation("IdUserSendNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.Post", b =>
                {
                    b.HasOne("citas_backend.Data.User", "IdUserNavigation")
                        .WithMany("Posts")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__Posts__IdUser__29572725");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.PostImage", b =>
                {
                    b.HasOne("citas_backend.Data.Post", "IdPostNavigation")
                        .WithMany("PostImages")
                        .HasForeignKey("IdPost")
                        .IsRequired()
                        .HasConstraintName("FK__PostImage__IdPos__35BCFE0A");

                    b.Navigation("IdPostNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.SocialNetwork", b =>
                {
                    b.HasOne("citas_backend.Data.User", "IdUserNavigation")
                        .WithMany("SocialNetworks")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__SocialNet__IdUse__38996AB5");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.User", b =>
                {
                    b.HasOne("citas_backend.Data.Degree", "IdDegreeNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdDegree")
                        .IsRequired()
                        .HasConstraintName("FK__Users__IdDegree__267ABA7A");

                    b.Navigation("IdDegreeNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.UserHobby", b =>
                {
                    b.HasOne("citas_backend.Data.Hobby", "IdHobbieNavigation")
                        .WithMany("UserHobbies")
                        .HasForeignKey("IdHobbie")
                        .IsRequired()
                        .HasConstraintName("FK__UserHobbi__IdHob__32E0915F");

                    b.HasOne("citas_backend.Data.User", "IdUserNavigation")
                        .WithMany("UserHobbies")
                        .HasForeignKey("IdUser")
                        .IsRequired()
                        .HasConstraintName("FK__UserHobbi__IdUse__31EC6D26");

                    b.Navigation("IdHobbieNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("citas_backend.Data.Degree", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("citas_backend.Data.Hobby", b =>
                {
                    b.Navigation("UserHobbies");
                });

            modelBuilder.Entity("citas_backend.Data.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostImages");
                });

            modelBuilder.Entity("citas_backend.Data.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DateIdUserFirstNavigations");

                    b.Navigation("DateIdUserSecondNavigations");

                    b.Navigation("MessageIdUserRecieveNavigations");

                    b.Navigation("MessageIdUserSendNavigations");

                    b.Navigation("Posts");

                    b.Navigation("SocialNetworks");

                    b.Navigation("UserHobbies");
                });
#pragma warning restore 612, 618
        }
    }
}
